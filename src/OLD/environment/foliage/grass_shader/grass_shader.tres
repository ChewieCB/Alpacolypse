[gd_resource type="ShaderMaterial" load_steps=24 format=2]

[sub_resource type="VisualShaderNodeColorUniform" id=1]
uniform_name = "albedo"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "world"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=4]

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeVectorOp" id=7]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 31

[sub_resource type="VisualShaderNodeVectorLen" id=9]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=10]
default_input_values = [ 0, 1.0, 1, 0.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=11]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=12]
uniform_name = "player_position"

[sub_resource type="VisualShaderNodeScalarUniform" id=13]
uniform_name = "radius"

[sub_resource type="VisualShaderNodeScalarUniform" id=14]
uniform_name = "force"

[sub_resource type="VisualShaderNodeVectorOp" id=15]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=17]
operator = 1

[sub_resource type="VisualShaderNodeTransformVecMult" id=18]

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "world"

[sub_resource type="VisualShaderNodeVectorOp" id=20]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=21]

[sub_resource type="VisualShaderNodeTransformVecMult" id=22]
operator = 1

[sub_resource type="VisualShader" id=23]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx;

uniform float radius;
uniform vec3 player_position;
uniform float force;
uniform vec4 albedo : hint_color;



void vertex() {
// ScalarUniform:20
	float n_out20p0 = radius;

// Input:6
	mat4 n_out6p0 = WORLD_MATRIX;

// Input:3
	vec3 n_out3p0 = VERTEX;

// TransformVectorMult:5
	vec3 n_out5p0 = (n_out6p0 * vec4(n_out3p0, 1.0)).xyz;

// VectorUniform:2
	vec3 n_out2p0 = player_position;

// VectorOp:4
	vec3 n_out4p0 = n_out5p0 - n_out2p0;

// VectorLen:17
	float n_out17p0 = length(n_out4p0);

// ScalarSmoothStep:18
	float n_in18p1 = 0.00000;
	float n_out18p0 = smoothstep(n_out20p0, n_in18p1, n_out17p0);

// Input:10
	mat4 n_out10p0 = WORLD_MATRIX;

// VectorOp:7
	vec3 n_in7p1 = vec3(1.00000, 0.00000, 1.00000);
	vec3 n_out7p0 = n_out4p0 * n_in7p1;

// VectorFunc:8
	vec3 n_out8p0 = normalize(n_out7p0);

// TransformVectorMult:9
	vec3 n_out9p0 = (vec4(n_out8p0, 1.0) * n_out10p0).xyz;

// Input:13
	vec3 n_out13p0 = vec3(UV, 0.0);

// VectorDecompose:14
	float n_out14p0 = n_out13p0.x;
	float n_out14p1 = n_out13p0.y;
	float n_out14p2 = n_out13p0.z;

// ScalarFunc:16
	float n_out16p0 = 1.0 - n_out14p1;

// VectorOp:15
	vec3 n_out15p0 = n_out9p0 * vec3(n_out16p0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out18p0) * n_out15p0;

// ScalarUniform:21
	float n_out21p0 = force;

// VectorOp:22
	vec3 n_out22p0 = n_out19p0 * vec3(n_out21p0);

// Input:11
	vec3 n_out11p0 = VERTEX;

// VectorOp:12
	vec3 n_out12p0 = n_out22p0 + n_out11p0;

// Output:0
	VERTEX = n_out12p0;

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = albedo.rgb;
	float n_out2p1 = albedo.a;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -549, -16.75 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 2080, 180 )
nodes/vertex/2/node = SubResource( 12 )
nodes/vertex/2/position = Vector2( -200, 360 )
nodes/vertex/3/node = SubResource( 16 )
nodes/vertex/3/position = Vector2( -180, 240 )
nodes/vertex/4/node = SubResource( 17 )
nodes/vertex/4/position = Vector2( 340, 320 )
nodes/vertex/5/node = SubResource( 18 )
nodes/vertex/5/position = Vector2( 20, 120 )
nodes/vertex/6/node = SubResource( 19 )
nodes/vertex/6/position = Vector2( -180, 160 )
nodes/vertex/7/node = SubResource( 20 )
nodes/vertex/7/position = Vector2( 560, 320 )
nodes/vertex/8/node = SubResource( 21 )
nodes/vertex/8/position = Vector2( 780, 340 )
nodes/vertex/9/node = SubResource( 22 )
nodes/vertex/9/position = Vector2( 1000, 300 )
nodes/vertex/10/node = SubResource( 2 )
nodes/vertex/10/position = Vector2( 800, 240 )
nodes/vertex/11/node = SubResource( 3 )
nodes/vertex/11/position = Vector2( 1060, 160 )
nodes/vertex/12/node = SubResource( 4 )
nodes/vertex/12/position = Vector2( 1760, 200 )
nodes/vertex/13/node = SubResource( 5 )
nodes/vertex/13/position = Vector2( 580, 520 )
nodes/vertex/14/node = SubResource( 6 )
nodes/vertex/14/position = Vector2( 800, 500 )
nodes/vertex/15/node = SubResource( 7 )
nodes/vertex/15/position = Vector2( 1280, 380 )
nodes/vertex/16/node = SubResource( 8 )
nodes/vertex/16/position = Vector2( 1060, 500 )
nodes/vertex/17/node = SubResource( 9 )
nodes/vertex/17/position = Vector2( 620, 60 )
nodes/vertex/18/node = SubResource( 10 )
nodes/vertex/18/position = Vector2( 960, 0 )
nodes/vertex/19/node = SubResource( 11 )
nodes/vertex/19/position = Vector2( 1300, 20 )
nodes/vertex/20/node = SubResource( 13 )
nodes/vertex/20/position = Vector2( 720, -80 )
nodes/vertex/21/node = SubResource( 14 )
nodes/vertex/21/position = Vector2( 1360, 560 )
nodes/vertex/22/node = SubResource( 15 )
nodes/vertex/22/position = Vector2( 1540, 100 )
nodes/vertex/connections = PoolIntArray( 2, 0, 4, 1, 6, 0, 5, 0, 3, 0, 5, 1, 5, 0, 4, 0, 4, 0, 7, 0, 7, 0, 8, 0, 8, 0, 9, 1, 10, 0, 9, 0, 12, 0, 0, 0, 13, 0, 14, 0, 9, 0, 15, 0, 14, 1, 16, 0, 16, 0, 15, 1, 4, 0, 17, 0, 17, 0, 18, 2, 18, 0, 19, 0, 15, 0, 19, 1, 20, 0, 18, 0, 21, 0, 22, 1, 19, 0, 22, 0, 11, 0, 12, 1, 22, 0, 12, 0 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -300, 240 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )

[resource]
shader = SubResource( 23 )
shader_param/radius = 2.0
shader_param/player_position = Vector3( -2.49693, 0, 0 )
shader_param/force = 0.3
shader_param/albedo = Color( 0.431373, 0.905882, 0.0705882, 1 )
